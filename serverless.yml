service: llamalend-nft

package:
  individually: true

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 250
  region: eu-central-1
  endpointType: REGIONAL # Set to regional because the api gateway will be behind a cloudfront distribution
  stage: prod
  apiGateway:
    binaryMediaTypes:
      - 'image/png'
      - 'image/jpeg'
      - '*/*'
  tracing: # Enable X-Ray tracing (debugging)
    apiGateway: true
    lambda: true
  iamRoleStatements:
    - Effect: Allow # X-Ray permissions
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: "*"
    - Effect: Allow # Lambda logs on cloudwatch
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource:
        - "Fn::Join":
            - ":"
            - - "arn:aws:logs"
              - Ref: "AWS::Region"
              - Ref: "AWS::AccountId"
              - "log-group:/aws/lambda/*:*:*"
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:*Object*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "ses:*"
      Resource: "*"
  environment:
    tableName: ${self:custom.tableName}
    stage: ${self:custom.stage}

custom:
  stage: ${opt:stage, self:provider.stage}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      forceInclude:
        - ethers
        - sharp
    packager: "npm"
    excludeFiles: src/**/*.test.ts
  prune:
    automatic: true
    number: 5 # Number of versions to keep
  tableName: prod-table
  domainMap:
    prod:
      domain: nft.llamalend.com
      certificateArn: "arn:aws:acm:us-east-1:964585596951:certificate/ac2a31be-18a1-480c-8be0-067e1580d144"
  domain: ${self:custom.domainMap.${self:custom.stage}.domain}
  certificateArn: ${self:custom.domainMap.${self:custom.stage}.certificateArn}

functions:
  fallback:
    handler: src/fallback.default
    events:
      - http:
          path: /{params+}
          method: any
  getNftMetadata:
    handler: src/getNftMetadata.default
    timeout: 120
    memorySize: 2000
    events:
      - http:
          path: nft/{chainId}/{loanContract}/{nftContract}/{nftId}
          method: get
  getNftImage:
    handler: src/getNftImage.default
    timeout: 120
    memorySize: 2000
    events:
      - http:
          path: image2/{deadline}/{imageUrl}
          method: get
          response:
            contentHandling: CONVERT_TO_BINARY
  registerEmail:
    handler: src/registerEmail.default
    timeout: 120
    memorySize: 2000
    events:
      - http:
          path: email
          method: post
  notifyEmails:
    handler: src/notifyEmails.default
    events:
      - schedule: cron(0 * * * ? *)

resources:
  # CORS for api gateway errors
  - ${file(resources/api-gateway-errors.yml)}
  # Cloudfront API distribution
  - ${file(resources/api-cloudfront-distribution.yml)}

plugins:
  - serverless-webpack-fixed
  - serverless-offline
  - serverless-prune-plugin
